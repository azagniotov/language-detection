name: Build and Test

on:
  push:
    branches:
      - master
    paths-ignore:
      - '*.txt'
      - '*.md'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '*.txt'
      - '*.md'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ "11", "17", "21" ]

    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4
        with:
          # https://github.com/diffplug/spotless/issues/1242
          fetch-depth: 0

      - name: Set up Azul Zulu OpenJDK Using Matrix
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: "zulu"
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build
        run: ./gradlew build

      - name: Run unit tests
        run: ./gradlew clean test

  accuracy-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4
        with:
          # https://github.com/diffplug/spotless/issues/1242
          fetch-depth: 0

      - name: Set up Azul Zulu OpenJDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "zulu"
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run accuracy tests
        run: ./gradlew clean accuracyTest

  commit-next-version:
    needs: accuracy-test
    if: github.event_name == 'pull_request'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      version_tag: ${{ steps.calculate_tag_version.outputs.version_tag }}
    steps:

      - name: Checkout project sources
        uses: actions/checkout@v4
        # https://github.com/marketplace/actions/git-semantic-version#important-note-regarding-the-checkout-action
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Manage semantic versioning
        uses: paulhatch/semantic-version@v5.4.0
        id: semantic_version
        with:
          tag_prefix: ""
          major_pattern: "[MAJOR]"
          minor_pattern: "[MINOR]"
          bump_each_commit: true
          bump_each_commit_patch_pattern: "[PATCH]"
          version_format: "${major}.${minor}.${patch}"
          search_commit_body: false
          debug: true

      - name: Set new tag version into ENV
        run: |
          CURRENT_VERSION=$(cat latest-version.txt)
          echo "Current version: $CURRENT_VERSION"
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

          LATEST_VERSION=${{ steps.semantic_version.outputs.version_tag }}
          echo "New version: $LATEST_VERSION"
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Save the latest version to file
        if: ${{ env.CURRENT_VERSION != env.LATEST_VERSION }}
        run: |
          echo ${{ env.LATEST_VERSION }} > latest-version.txt
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add latest-version.txt
          git commit -m "Auto-update the latest version to ${{ env.LATEST_VERSION }}"
          git push

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@d9e39adac83414bf94447ae3ccab3d4639128362 # v4.0.0
